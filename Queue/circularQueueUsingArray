//LeetCode Question No 622: https://leetcode.com/problems/design-circular-queue/

class MyCircularQueue {
    int *arr;
    int qfront;
    int qrear;
    int size;
public:
    MyCircularQueue(int k) {
        size = k;
        arr = new int[size];
        qfront = -1;
        qrear = -1;   
    }
    
    bool enQueue(int value) {
        //queue is full
        if((qfront == 0 && qrear == size-1) || ((qrear + 1) % size == qfront))
        {
            return false;
        }
        //queue is empty
        else if(qfront == -1)
        {
            qfront = 0;
            qrear = 0;
        }
        //Maintain cyclic nature
        else if(qrear == size-1 && qfront != 0)
        {
            qrear = 0;
        }
        else
        {
            qrear++;
        }
        arr[qrear] = value;
        return true;
    }
    
    bool deQueue() {
        if(qfront == -1)
        {
            return false;
        }
        int ans = arr[qfront];
        arr[qfront] = -1;
        if(qfront == qrear)
        {
            qfront = -1;
            qrear = -1;
        }
        else if(qfront == size-1)
        {
            qfront  = 0;
        }
        else
        {
            qfront++;
        }
        return true;
        
    }
    
    int Front() {
        if(qfront == -1)
        {
            return -1;
        }

        return arr[qfront];
        
    }
    
    int Rear() {
        if(qrear == -1)
        {
            return -1;
        }
        return arr[qrear]; 
    }
    
    bool isEmpty() {
        if(qfront == -1 && qrear == -1)
        {
            return true;
        }
        return false;
    }
    
    bool isFull() {
        if((qfront == 0 && qrear == size -1) || (qrear == (qfront-1)%(size-1)))
        {
            return true;
        }
        return false;
    }
};

/**
 * Your MyCircularQueue object will be instantiated and called as such:
 * MyCircularQueue* obj = new MyCircularQueue(k);
 * bool param_1 = obj->enQueue(value);
 * bool param_2 = obj->deQueue();
 * int param_3 = obj->Front();
 * int param_4 = obj->Rear();
 * bool param_5 = obj->isEmpty();
 * bool param_6 = obj->isFull();
 */
